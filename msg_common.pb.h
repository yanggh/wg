// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_common.proto

#ifndef PROTOBUF_msg_5fcommon_2eproto__INCLUDED
#define PROTOBUF_msg_5fcommon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_msg_5fcommon_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsMsgCommonDataImpl();
void InitDefaultsMsgCommonData();
inline void InitDefaults() {
  InitDefaultsMsgCommonData();
}
}  // namespace protobuf_msg_5fcommon_2eproto
namespace mpfmessage {
class MsgCommonData;
class MsgCommonDataDefaultTypeInternal;
extern MsgCommonDataDefaultTypeInternal _MsgCommonData_default_instance_;
}  // namespace mpfmessage
namespace mpfmessage {

enum ResultCode {
  SUCCESS = 1,
  FAIL = 2,
  UNKNOWN_RESULT = 3,
  OTHER_RESULT = 4
};
bool ResultCode_IsValid(int value);
const ResultCode ResultCode_MIN = SUCCESS;
const ResultCode ResultCode_MAX = OTHER_RESULT;
const int ResultCode_ARRAYSIZE = ResultCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ResultCode_descriptor();
inline const ::std::string& ResultCode_Name(ResultCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ResultCode_descriptor(), value);
}
inline bool ResultCode_Parse(
    const ::std::string& name, ResultCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResultCode>(
    ResultCode_descriptor(), name, value);
}
enum MESSAGE_CMD_CODE_BASE {
  RA_MODUAL_CMD_BASE = 100100,
  SNMP_MODUAL_CMD_BASE = 100200,
  NETFLOW_MODUAL_CMD_BASE = 100300
};
bool MESSAGE_CMD_CODE_BASE_IsValid(int value);
const MESSAGE_CMD_CODE_BASE MESSAGE_CMD_CODE_BASE_MIN = RA_MODUAL_CMD_BASE;
const MESSAGE_CMD_CODE_BASE MESSAGE_CMD_CODE_BASE_MAX = NETFLOW_MODUAL_CMD_BASE;
const int MESSAGE_CMD_CODE_BASE_ARRAYSIZE = MESSAGE_CMD_CODE_BASE_MAX + 1;

const ::google::protobuf::EnumDescriptor* MESSAGE_CMD_CODE_BASE_descriptor();
inline const ::std::string& MESSAGE_CMD_CODE_BASE_Name(MESSAGE_CMD_CODE_BASE value) {
  return ::google::protobuf::internal::NameOfEnum(
    MESSAGE_CMD_CODE_BASE_descriptor(), value);
}
inline bool MESSAGE_CMD_CODE_BASE_Parse(
    const ::std::string& name, MESSAGE_CMD_CODE_BASE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MESSAGE_CMD_CODE_BASE>(
    MESSAGE_CMD_CODE_BASE_descriptor(), name, value);
}
enum SNMP_MESSAGE_CMD_CODE {
  SNMP_GET_MSG = 1,
  SNMP_RESP_MSG = 2,
  SNMP_SEND_TRAP_MSG = 3,
  TOPO_DISCOVERY_REQ_MSG = 4,
  TOPO_DISCOVERY_NOTIFY_MSG = 5,
  RES_SYNC_REQ_MSG = 6,
  RES_SYNC_NOTIFY_MSG = 7,
  DEV_PERF_COLLECT_REQ_MSG = 8,
  GET_HOST_PROC_LIST_REQ_MSG = 9,
  DB_PERF_COLLECT_REQ_MSG = 10,
  MIDWARE_PERF_COLLECT_REQ_MSG = 11,
  ROOM_RES_SYNC_REQ_MSG = 12,
  GET_SENSER_VALUE_REQ_MSG = 13,
  GET_HOST_FILE_SYSTEM_LIST_REQ_MSG = 14,
  CONNECTIVITY_TEST_REQ_MSG = 15,
  REACHABILITY_TEST_REQ_MSG = 16,
  REACHABILITY_TEST_NOTIFY_MSG = 17
};
bool SNMP_MESSAGE_CMD_CODE_IsValid(int value);
const SNMP_MESSAGE_CMD_CODE SNMP_MESSAGE_CMD_CODE_MIN = SNMP_GET_MSG;
const SNMP_MESSAGE_CMD_CODE SNMP_MESSAGE_CMD_CODE_MAX = REACHABILITY_TEST_NOTIFY_MSG;
const int SNMP_MESSAGE_CMD_CODE_ARRAYSIZE = SNMP_MESSAGE_CMD_CODE_MAX + 1;

const ::google::protobuf::EnumDescriptor* SNMP_MESSAGE_CMD_CODE_descriptor();
inline const ::std::string& SNMP_MESSAGE_CMD_CODE_Name(SNMP_MESSAGE_CMD_CODE value) {
  return ::google::protobuf::internal::NameOfEnum(
    SNMP_MESSAGE_CMD_CODE_descriptor(), value);
}
inline bool SNMP_MESSAGE_CMD_CODE_Parse(
    const ::std::string& name, SNMP_MESSAGE_CMD_CODE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SNMP_MESSAGE_CMD_CODE>(
    SNMP_MESSAGE_CMD_CODE_descriptor(), name, value);
}
enum ERROR_CODE_BASE {
  ERROR_CODE_SUCCESS = 0,
  COMMON_ERROR_CODE_BASE = 200000,
  RA_MODUAL_ERROR_CODE_BASE = 200100,
  SNMP_MODUAL_ERROR_CODE_BASE = 200200
};
bool ERROR_CODE_BASE_IsValid(int value);
const ERROR_CODE_BASE ERROR_CODE_BASE_MIN = ERROR_CODE_SUCCESS;
const ERROR_CODE_BASE ERROR_CODE_BASE_MAX = SNMP_MODUAL_ERROR_CODE_BASE;
const int ERROR_CODE_BASE_ARRAYSIZE = ERROR_CODE_BASE_MAX + 1;

const ::google::protobuf::EnumDescriptor* ERROR_CODE_BASE_descriptor();
inline const ::std::string& ERROR_CODE_BASE_Name(ERROR_CODE_BASE value) {
  return ::google::protobuf::internal::NameOfEnum(
    ERROR_CODE_BASE_descriptor(), value);
}
inline bool ERROR_CODE_BASE_Parse(
    const ::std::string& name, ERROR_CODE_BASE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ERROR_CODE_BASE>(
    ERROR_CODE_BASE_descriptor(), name, value);
}
enum SNMP_ERROR_CODE {
  SNMP_CONNECT_ERROR = 1
};
bool SNMP_ERROR_CODE_IsValid(int value);
const SNMP_ERROR_CODE SNMP_ERROR_CODE_MIN = SNMP_CONNECT_ERROR;
const SNMP_ERROR_CODE SNMP_ERROR_CODE_MAX = SNMP_CONNECT_ERROR;
const int SNMP_ERROR_CODE_ARRAYSIZE = SNMP_ERROR_CODE_MAX + 1;

const ::google::protobuf::EnumDescriptor* SNMP_ERROR_CODE_descriptor();
inline const ::std::string& SNMP_ERROR_CODE_Name(SNMP_ERROR_CODE value) {
  return ::google::protobuf::internal::NameOfEnum(
    SNMP_ERROR_CODE_descriptor(), value);
}
inline bool SNMP_ERROR_CODE_Parse(
    const ::std::string& name, SNMP_ERROR_CODE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SNMP_ERROR_CODE>(
    SNMP_ERROR_CODE_descriptor(), name, value);
}
// ===================================================================

class MsgCommonData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:mpfmessage.MsgCommonData) */ {
 public:
  MsgCommonData();
  virtual ~MsgCommonData();

  MsgCommonData(const MsgCommonData& from);

  inline MsgCommonData& operator=(const MsgCommonData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgCommonData(MsgCommonData&& from) noexcept
    : MsgCommonData() {
    *this = ::std::move(from);
  }

  inline MsgCommonData& operator=(MsgCommonData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCommonData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgCommonData* internal_default_instance() {
    return reinterpret_cast<const MsgCommonData*>(
               &_MsgCommonData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(MsgCommonData* other);
  friend void swap(MsgCommonData& a, MsgCommonData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgCommonData* New() const PROTOBUF_FINAL { return New(NULL); }

  MsgCommonData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsgCommonData& from);
  void MergeFrom(const MsgCommonData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsgCommonData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string descriprion = 2;
  bool has_descriprion() const;
  void clear_descriprion();
  static const int kDescriprionFieldNumber = 2;
  const ::std::string& descriprion() const;
  void set_descriprion(const ::std::string& value);
  #if LANG_CXX11
  void set_descriprion(::std::string&& value);
  #endif
  void set_descriprion(const char* value);
  void set_descriprion(const char* value, size_t size);
  ::std::string* mutable_descriprion();
  ::std::string* release_descriprion();
  void set_allocated_descriprion(::std::string* descriprion);

  // optional uint32 code = 1;
  bool has_code() const;
  void clear_code();
  static const int kCodeFieldNumber = 1;
  ::google::protobuf::uint32 code() const;
  void set_code(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:mpfmessage.MsgCommonData)
 private:
  void set_has_code();
  void clear_has_code();
  void set_has_descriprion();
  void clear_has_descriprion();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr descriprion_;
  ::google::protobuf::uint32 code_;
  friend struct ::protobuf_msg_5fcommon_2eproto::TableStruct;
  friend void ::protobuf_msg_5fcommon_2eproto::InitDefaultsMsgCommonDataImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgCommonData

// optional uint32 code = 1;
inline bool MsgCommonData::has_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsgCommonData::set_has_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsgCommonData::clear_has_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsgCommonData::clear_code() {
  code_ = 0u;
  clear_has_code();
}
inline ::google::protobuf::uint32 MsgCommonData::code() const {
  // @@protoc_insertion_point(field_get:mpfmessage.MsgCommonData.code)
  return code_;
}
inline void MsgCommonData::set_code(::google::protobuf::uint32 value) {
  set_has_code();
  code_ = value;
  // @@protoc_insertion_point(field_set:mpfmessage.MsgCommonData.code)
}

// optional string descriprion = 2;
inline bool MsgCommonData::has_descriprion() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsgCommonData::set_has_descriprion() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsgCommonData::clear_has_descriprion() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsgCommonData::clear_descriprion() {
  descriprion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_descriprion();
}
inline const ::std::string& MsgCommonData::descriprion() const {
  // @@protoc_insertion_point(field_get:mpfmessage.MsgCommonData.descriprion)
  return descriprion_.GetNoArena();
}
inline void MsgCommonData::set_descriprion(const ::std::string& value) {
  set_has_descriprion();
  descriprion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:mpfmessage.MsgCommonData.descriprion)
}
#if LANG_CXX11
inline void MsgCommonData::set_descriprion(::std::string&& value) {
  set_has_descriprion();
  descriprion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:mpfmessage.MsgCommonData.descriprion)
}
#endif
inline void MsgCommonData::set_descriprion(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_descriprion();
  descriprion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:mpfmessage.MsgCommonData.descriprion)
}
inline void MsgCommonData::set_descriprion(const char* value, size_t size) {
  set_has_descriprion();
  descriprion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:mpfmessage.MsgCommonData.descriprion)
}
inline ::std::string* MsgCommonData::mutable_descriprion() {
  set_has_descriprion();
  // @@protoc_insertion_point(field_mutable:mpfmessage.MsgCommonData.descriprion)
  return descriprion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCommonData::release_descriprion() {
  // @@protoc_insertion_point(field_release:mpfmessage.MsgCommonData.descriprion)
  clear_has_descriprion();
  return descriprion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCommonData::set_allocated_descriprion(::std::string* descriprion) {
  if (descriprion != NULL) {
    set_has_descriprion();
  } else {
    clear_has_descriprion();
  }
  descriprion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), descriprion);
  // @@protoc_insertion_point(field_set_allocated:mpfmessage.MsgCommonData.descriprion)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace mpfmessage

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::mpfmessage::ResultCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mpfmessage::ResultCode>() {
  return ::mpfmessage::ResultCode_descriptor();
}
template <> struct is_proto_enum< ::mpfmessage::MESSAGE_CMD_CODE_BASE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mpfmessage::MESSAGE_CMD_CODE_BASE>() {
  return ::mpfmessage::MESSAGE_CMD_CODE_BASE_descriptor();
}
template <> struct is_proto_enum< ::mpfmessage::SNMP_MESSAGE_CMD_CODE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mpfmessage::SNMP_MESSAGE_CMD_CODE>() {
  return ::mpfmessage::SNMP_MESSAGE_CMD_CODE_descriptor();
}
template <> struct is_proto_enum< ::mpfmessage::ERROR_CODE_BASE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mpfmessage::ERROR_CODE_BASE>() {
  return ::mpfmessage::ERROR_CODE_BASE_descriptor();
}
template <> struct is_proto_enum< ::mpfmessage::SNMP_ERROR_CODE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::mpfmessage::SNMP_ERROR_CODE>() {
  return ::mpfmessage::SNMP_ERROR_CODE_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_5fcommon_2eproto__INCLUDED
